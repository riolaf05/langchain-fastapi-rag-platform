name: Build on DockerHub and Deploy to AWS 
on:
  push:
    branches:
      - develop
      - main
      - summary
env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  AWS_SSH_KEY: ${{ secrets.AWS_SSH_KEY }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  EC2_ADDRESS: ${{ secrets.EC2_ADDRESS }} #with https:...
  CONTAINER: ${{ secrets.CONTAINER }}
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  QDRANT_URL: ${{ secrets.QDRANT_URL }}
  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
  JOB_URI: ${{ secrets.JOB_URI }}
  SNS_ENDPOINT_SUBSCRIBE: ${{ secrets.SNS_ENDPOINT_SUBSCRIBE }}  #http://adress:port
  SNS_TOPIC: ${{ secrets.SNS_TOPIC_ARN }} #arn
  AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
  AWS_TEXT_S3_BUCKET_NAME: ${{ secrets.AWS_TEXT_S3_BUCKET_NAME }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./
          push: true
          dockerfile: ./Dockerfile
          tags: ${{env.DOCKERHUB_USERNAME}}/${{ secrets.IMAGE_NAME}}:${{ github.ref_name }}
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_TOKEN }}
    - name: Set permissions for private key
      run: |
        echo "${{ env.AWS_SSH_KEY }}" > key
        chmod 600 key
    - name: Stop running old container
      run: |
        ssh -o StrictHostKeyChecking=no -i key ubuntu@${{ env.EC2_ADDRESS}} 'sudo docker stop ${{ env.CONTAINER}} || true'
        ssh -o StrictHostKeyChecking=no -i key ubuntu@${{ env.EC2_ADDRESS}} 'sudo docker rm ${{ env.CONTAINER}} || true'
        ssh -o StrictHostKeyChecking=no -i key ubuntu@${{ env.EC2_ADDRESS}} 'sudo docker system prune -af'
    - name: Pull Docker image
      run: |
        ssh -o StrictHostKeyChecking=no -i key ubuntu@${{ env.EC2_ADDRESS}} 'sudo docker pull ${{env.DOCKERHUB_USERNAME}}/${{ env.IMAGE_NAME}}:${{ github.ref_name }}'
    - name: Run new container
      run: |
        ssh -o StrictHostKeyChecking=no -i key ubuntu@${{ env.EC2_ADDRESS}} 'sudo docker run -d -p 3000:3000 --restart unless-stopped --name ${{ env.CONTAINER}} \
        -e OPENAI_API_KEY=${{ env.OPENAI_API_KEY }} \
        -e AWS_ACCESS_KEY_ID=${{ env.AWS_ACCESS_KEY_ID }} \
        -e AWS_SECRET_ACCESS_KEY=${{ env.AWS_SECRET_ACCESS_KEY }} \
        -e AWS_S3_BUCKET_NAME=${{ env.AWS_S3_BUCKET_NAME }} \
        -e AWS_REGION=${{ env.AWS_REGION }} \
        -e QDRANT_URL=${{ env.QDRANT_URL }} \
        -e S3_BUCKET=${{ env.S3_BUCKET }} \
        -e JOB_URI=${{ env.JOB_URI }} \
        -e SNS_ENDPOINT_SUBSCRIBE=${{ env.SNS_ENDPOINT_SUBSCRIBE }} \
        -e SNS_TOPIC=${{ env.SNS_TOPIC }} \
        ${{ secrets.IMAGE_NAME}}:${{ github.ref_name }}'
